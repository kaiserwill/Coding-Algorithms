//Given an array S of n integers, find three integers in S such that the sum 
//is closest to a given number, target. Return the sum of the three integers. 
//You may assume that each input would have exactly one solution.

//For example, given array S = {-1 2 1 -4}, and target = 1.
//The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

#include<math.h>

int threeSumClosest(vector<int> &num, int target){
  
  //since we are assuming there would be exactly one solution
  //we do no need to check if the size of the vector is less than 3
  //since in that case there would be guaranteed 0 solution
  
  int len = num.size();
  
  int one = 0;
  int two = 1;
  int closestSum = num[0]+num[1]+num[2];
  
  for(int i=2; i<len; i++){
    for(int three=i; three<len; three++){
      int sum = num[one]+num[two]+num[three];
      if(abs(target-sum)<abs(target-cloesestSum))
        closestSum = sum;
    }
    one++;
    two++;
  }
  return closestSum; 
}
